{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","file":"src.9caef6c7.js","sourceRoot":"../demo","sourcesContent":["interface DelegatedEvent {\n  eventName: string;\n  delegatedTarget: Element;\n  handler?: Function;\n  target?: string;\n  once?: boolean;\n}\n\nclass EventDelegation {\n  private eventsMap = [];\n\n  private extractEventName = (eventName) => eventName.split('.')[0];\n\n  on = ({\n    eventName,\n    target = undefined,\n    handler,\n    delegatedTarget,\n    once = false\n  }: DelegatedEvent) => {\n    let newEvent;\n    let currentTarget = delegatedTarget;\n    const handlerParams = {\n      eventName,\n      currentTarget,\n      delegatedTarget\n    };\n\n    if (!target) {\n      newEvent = (event) => {\n        handler({ ...handlerParams, originalEvent: event });\n      };\n    } else {\n      newEvent = (event) => {\n        currentTarget = event.target;\n        for (\n          currentTarget;\n          currentTarget && currentTarget !== delegatedTarget;\n          currentTarget = currentTarget.parentNode as Element\n        ) {\n          if (\n            currentTarget.matches !== undefined &&\n            currentTarget.matches(target)\n          ) {\n            handler({ ...handlerParams, currentTarget, originalEvent: event });\n            break;\n          }\n        }\n      };\n    }\n\n    this.eventsMap[eventName] = newEvent;\n\n    delegatedTarget.addEventListener(\n      this.extractEventName(eventName),\n      this.eventsMap[eventName],\n      { once }\n    );\n\n    return currentTarget;\n  };\n\n  once = ({ eventName, target, handler, delegatedTarget }: DelegatedEvent) => {\n    return this.on({\n      eventName,\n      target,\n      handler,\n      delegatedTarget,\n      once: true\n    });\n  };\n\n  off = ({ delegatedTarget, eventName }: DelegatedEvent): boolean => {\n    delegatedTarget.removeEventListener(\n      this.extractEventName(eventName),\n      this.eventsMap[eventName]\n    );\n    return delete this.eventsMap[eventName];\n  };\n\n  fire = ({ delegatedTarget, eventName }: DelegatedEvent): boolean => {\n    const evt = document.createEvent('Event');\n    evt.initEvent(this.extractEventName(eventName), true, true);\n    return delegatedTarget.dispatchEvent(evt);\n  };\n}\n\nconst EventDelegationSingleton = new EventDelegation();\nObject.freeze(EventDelegationSingleton);\n\nexport default EventDelegationSingleton;\n"]}