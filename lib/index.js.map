{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["interface DelegatedEvent {\n  eventName: string;\n  delegatedTarget: Element;\n  handler?: Function;\n  target?: string;\n  once?: boolean;\n}\n\nclass EventDelegation {\n  private eventsMap = [];\n\n  extractEventName = (eventName) => eventName.split('.')[0];\n\n  on = ({\n    eventName,\n    target = undefined,\n    handler,\n    delegatedTarget,\n    once = false\n  }: DelegatedEvent) => {\n    let newEvent;\n    let currentTarget = delegatedTarget;\n    const handlerParams = {\n      eventName,\n      currentTarget,\n      delegatedTarget\n    };\n\n    if (!target) {\n      newEvent = (event) => {\n        handler({ ...handlerParams, originalEvent: event });\n      };\n    } else {\n      newEvent = (event) => {\n        currentTarget = event.target;\n        for (\n          currentTarget;\n          currentTarget && currentTarget !== delegatedTarget;\n          currentTarget = currentTarget.parentNode as Element\n        ) {\n          if (\n            currentTarget.matches !== undefined &&\n            currentTarget.matches(target)\n          ) {\n            handler({ ...handlerParams, currentTarget, originalEvent: event });\n            break;\n          }\n        }\n      };\n    }\n\n    this.eventsMap[eventName] = newEvent;\n\n    delegatedTarget.addEventListener(\n      this.extractEventName(eventName),\n      this.eventsMap[eventName],\n      { once }\n    );\n\n    return currentTarget;\n  };\n\n  once = ({ eventName, target, handler, delegatedTarget }: DelegatedEvent) =>\n    this.on({\n      eventName,\n      target,\n      handler,\n      delegatedTarget,\n      once: true\n    });\n\n  off = ({ delegatedTarget, eventName }: DelegatedEvent): boolean => {\n    delegatedTarget.removeEventListener(\n      this.extractEventName(eventName),\n      this.eventsMap[eventName]\n    );\n    return delete this.eventsMap[eventName];\n  };\n\n  fire = ({ delegatedTarget, eventName }: DelegatedEvent): boolean => {\n    const evt = document.createEvent('Event');\n    evt.initEvent(this.extractEventName(eventName), true, true);\n    return delegatedTarget.dispatchEvent(evt);\n  };\n}\n\nconst EventDelegationSingleton = new EventDelegation();\nObject.freeze(EventDelegationSingleton);\n\nexport default EventDelegationSingleton;\n"],"names":["EventDelegationSingleton","this","eventName","split","target","undefined","handler","delegatedTarget","once","currentTarget","handlerParams","_this","eventsMap","event","parentNode","matches","originalEvent","addEventListener","extractEventName","on","removeEventListener","evt","document","createEvent","initEvent","dispatchEvent","Object","freeze"],"mappings":"mNAsFMA,EAA2B,IA9EjC,sBACUC,eAAY,GAEpBA,sBAAmB,SAACC,UAAcA,EAAUC,MAAM,KAAK,IAEvDF,QAAK,gBACHC,IAAAA,cACAE,OAAAA,kBAASC,IACTC,IAAAA,QACAC,IAAAA,oBACAC,KAAAA,gBAGIC,EAAgBF,EACdG,EAAgB,CACpBR,UAAAA,EACAO,cAAAA,EACAF,gBAAAA,GAkCF,OARAI,EAAKC,UAAUV,GAvBVE,EAKQ,SAACS,GAEV,IADAJ,EAAgBI,EAAMT,OAGpBK,GAAiBA,IAAkBF,EACnCE,EAAgBA,EAAcK,WAE9B,QAC4BT,IAA1BI,EAAcM,SACdN,EAAcM,QAAQX,GACtB,CACAE,OAAaI,GAAeD,cAAAA,EAAeO,cAAeH,KAC1D,QAhBK,SAACA,GACVP,OAAaI,GAAeM,cAAeH,MAuB/CN,EAAgBU,iBACdN,EAAKO,iBAAiBhB,GACtBS,EAAKC,UAAUV,GACf,CAAEM,KAAAA,IAGGC,GAGTR,UAAO,mBACLU,EAAKQ,GAAG,CACNjB,YAFMA,UAGNE,SAHiBA,OAIjBE,UAJyBA,QAKzBC,kBALkCA,gBAMlCC,MAAM,KAGVP,SAAM,gBAAoBC,IAAAA,UAKxB,SALOK,gBACSa,oBACdT,EAAKO,iBAAiBhB,GACtBS,EAAKC,UAAUV,WAEHS,EAAKC,UAAUV,IAG/BD,UAAO,gBAAGM,IAAAA,gBAAiBL,IAAAA,UACnBmB,EAAMC,SAASC,YAAY,SAEjC,OADAF,EAAIG,UAAUb,EAAKO,iBAAiBhB,IAAY,GAAM,GAC/CK,EAAgBkB,cAAcJ,KAKzCK,OAAOC,OAAO3B"}