{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["const enableEventDelegation = (\n  eventsPrefix = '',\n  eventsMapPrefix = '_'\n): void => {\n  window[`${eventsMapPrefix}eventsMap`] = [];\n\n  HTMLElement.prototype[`${eventsPrefix}on`] = function (...args) {\n    const [eventNamespace, targetSelector, handler, once = { once: false }] = args;\n    const [eventName] = eventNamespace.split('.');\n    const eventsMap = window[`${eventsMapPrefix}eventsMap`];\n\n    if (typeof targetSelector === 'function' && handler === undefined) {\n      const newHandler: Function = targetSelector;\n\n      eventsMap[eventNamespace] = function (event) {\n        newHandler.call(this, {\n          eventNamespace,\n          target: this,\n          delegatedTarget: this,\n          originalEvent: event\n        });\n      };\n    } else {\n      eventsMap[eventNamespace] = function (event) {\n        for (\n          let { target } = event;\n          target && target !== this;\n          target = target.parentNode\n        ) {\n          if (target.matches !== undefined && target.matches(targetSelector)) {\n            handler.call(this, {\n              target,\n              eventNamespace,\n              delegatedTarget: this,\n              originalEvent: event\n            });\n            break;\n          }\n        }\n      };\n    }\n    this.addEventListener(eventName, eventsMap[eventNamespace], once);\n    return this;\n  };\n\n  HTMLElement.prototype[`${eventsPrefix}off`] = function (\n    eventNamespace: string\n  ) {\n    const [eventName] = eventNamespace.split('.');\n    const targetedEvent = window[`${eventsMapPrefix}eventsMap`];\n    this.removeEventListener(eventName, targetedEvent[eventNamespace]);\n    delete targetedEvent[eventNamespace];\n    return this;\n  };\n\n  HTMLElement.prototype[`${eventsPrefix}once`] = function (\n    eventNamespace,\n    targetSelector,\n    handler: Function\n  ) {\n    this[`${eventsPrefix}on`](eventNamespace, targetSelector, handler, {\n      once: true\n    });\n    return this;\n  };\n};\n\nexport default enableEventDelegation;\n"],"names":["eventsPrefix","eventsMapPrefix","window","HTMLElement","prototype","args","eventNamespace","targetSelector","handler","once","eventName","split","eventsMap","undefined","newHandler","event","call","this","target","delegatedTarget","originalEvent","parentNode","matches","addEventListener","targetedEvent","removeEventListener"],"mappings":"cAA8B,CAC5BA,EAAe,GACfC,EAAkB,OAElBC,OAAUD,eAA8B,GAExCE,YAAYC,UAAaJ,QAAoB,YAAaK,GACxD,MAAOC,EAAgBC,EAAgBC,EAASC,EAAO,CAAEA,MAAM,IAAWJ,GACnEK,GAAaJ,EAAeK,MAAM,KACnCC,EAAYV,OAAUD,eAE5B,GAA8B,mBAAnBM,QAA6CM,IAAZL,EAAuB,CACjE,MAAMM,EAAuBP,EAE7BK,EAAUN,GAAkB,SAAUS,GACpCD,EAAWE,KAAKC,KAAM,CACpBX,eAAAA,EACAY,OAAQD,KACRE,gBAAiBF,KACjBG,cAAeL,UAInBH,EAAUN,GAAkB,SAAUS,GACpC,IACE,IAAIG,OAAEA,GAAWH,EACjBG,GAAUA,IAAWD,KACrBC,EAASA,EAAOG,WAEhB,QAAuBR,IAAnBK,EAAOI,SAAyBJ,EAAOI,QAAQf,GAAiB,CAClEC,EAAQQ,KAAKC,KAAM,CACjBC,OAAAA,EACAZ,eAAAA,EACAa,gBAAiBF,KACjBG,cAAeL,IAEjB,QAMR,OADAE,KAAKM,iBAAiBb,EAAWE,EAAUN,GAAiBG,SAI9DN,YAAYC,UAAaJ,SAAqB,SAC5CM,GAEA,MAAOI,GAAaJ,EAAeK,MAAM,KACnCa,EAAgBtB,OAAUD,eAGhC,OAFAgB,KAAKQ,oBAAoBf,EAAWc,EAAclB,WAC3CkB,EAAclB,SAIvBH,YAAYC,UAAaJ,UAAsB,SAC7CM,EACAC,EACAC,GAKA,OAHAS,KAAQjB,QAAkBM,EAAgBC,EAAgBC,EAAS,CACjEC,MAAM"}